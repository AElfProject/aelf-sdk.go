// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.11.4
// source: vote_contract.proto

package client

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVotingItemInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The voting activity id.
	VotingItemId *Hash `protobuf:"bytes,1,opt,name=voting_item_id,json=votingItemId,proto3" json:"voting_item_id,omitempty"`
}

func (x *GetVotingItemInput) Reset() {
	*x = GetVotingItemInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVotingItemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVotingItemInput) ProtoMessage() {}

func (x *GetVotingItemInput) ProtoReflect() protoreflect.Message {
	mi := &file_vote_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVotingItemInput.ProtoReflect.Descriptor instead.
func (*GetVotingItemInput) Descriptor() ([]byte, []int) {
	return file_vote_contract_proto_rawDescGZIP(), []int{0}
}

func (x *GetVotingItemInput) GetVotingItemId() *Hash {
	if x != nil {
		return x.VotingItemId
	}
	return nil
}

type VotedItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The voted ids.
	VotedItemVoteIds map[string]*VotedIds `protobuf:"bytes,1,rep,name=voted_item_vote_ids,json=votedItemVoteIds,proto3" json:"voted_item_vote_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VotedItems) Reset() {
	*x = VotedItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotedItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotedItems) ProtoMessage() {}

func (x *VotedItems) ProtoReflect() protoreflect.Message {
	mi := &file_vote_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotedItems.ProtoReflect.Descriptor instead.
func (*VotedItems) Descriptor() ([]byte, []int) {
	return file_vote_contract_proto_rawDescGZIP(), []int{1}
}

func (x *VotedItems) GetVotedItemVoteIds() map[string]*VotedIds {
	if x != nil {
		return x.VotedItemVoteIds
	}
	return nil
}

type VotedIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The active vote ids.
	ActiveVotes []*Hash `protobuf:"bytes,1,rep,name=active_votes,json=activeVotes,proto3" json:"active_votes,omitempty"`
	// The withdrawn vote ids.
	WithdrawnVotes []*Hash `protobuf:"bytes,2,rep,name=withdrawn_votes,json=withdrawnVotes,proto3" json:"withdrawn_votes,omitempty"`
}

func (x *VotedIds) Reset() {
	*x = VotedIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotedIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotedIds) ProtoMessage() {}

func (x *VotedIds) ProtoReflect() protoreflect.Message {
	mi := &file_vote_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotedIds.ProtoReflect.Descriptor instead.
func (*VotedIds) Descriptor() ([]byte, []int) {
	return file_vote_contract_proto_rawDescGZIP(), []int{2}
}

func (x *VotedIds) GetActiveVotes() []*Hash {
	if x != nil {
		return x.ActiveVotes
	}
	return nil
}

func (x *VotedIds) GetWithdrawnVotes() []*Hash {
	if x != nil {
		return x.WithdrawnVotes
	}
	return nil
}

type GetVotingResultInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The voting activity id.
	VotingItemId *Hash `protobuf:"bytes,1,opt,name=voting_item_id,json=votingItemId,proto3" json:"voting_item_id,omitempty"`
	// The snapshot number.
	SnapshotNumber int64 `protobuf:"varint,2,opt,name=snapshot_number,json=snapshotNumber,proto3" json:"snapshot_number,omitempty"`
}

func (x *GetVotingResultInput) Reset() {
	*x = GetVotingResultInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVotingResultInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVotingResultInput) ProtoMessage() {}

func (x *GetVotingResultInput) ProtoReflect() protoreflect.Message {
	mi := &file_vote_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVotingResultInput.ProtoReflect.Descriptor instead.
func (*GetVotingResultInput) Descriptor() ([]byte, []int) {
	return file_vote_contract_proto_rawDescGZIP(), []int{3}
}

func (x *GetVotingResultInput) GetVotingItemId() *Hash {
	if x != nil {
		return x.VotingItemId
	}
	return nil
}

func (x *GetVotingResultInput) GetSnapshotNumber() int64 {
	if x != nil {
		return x.SnapshotNumber
	}
	return 0
}

type VotingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The voting activity id.
	VotingItemId *Hash `protobuf:"bytes,1,opt,name=voting_item_id,json=votingItemId,proto3" json:"voting_item_id,omitempty"`
	// The voting result, option -> amount of votes,
	Results map[string]int64 `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// The snapshot number.
	SnapshotNumber int64 `protobuf:"varint,3,opt,name=snapshot_number,json=snapshotNumber,proto3" json:"snapshot_number,omitempty"`
	// The total number of voters.
	VotersCount int64 `protobuf:"varint,4,opt,name=voters_count,json=votersCount,proto3" json:"voters_count,omitempty"`
	// The start time of this snapshot.
	SnapshotStartTimestamp *timestamp.Timestamp `protobuf:"bytes,5,opt,name=snapshot_start_timestamp,json=snapshotStartTimestamp,proto3" json:"snapshot_start_timestamp,omitempty"`
	// The end time of this snapshot.
	SnapshotEndTimestamp *timestamp.Timestamp `protobuf:"bytes,6,opt,name=snapshot_end_timestamp,json=snapshotEndTimestamp,proto3" json:"snapshot_end_timestamp,omitempty"`
	// Total votes received during the process of this snapshot.
	VotesAmount int64 `protobuf:"varint,7,opt,name=votes_amount,json=votesAmount,proto3" json:"votes_amount,omitempty"`
}

func (x *VotingResult) Reset() {
	*x = VotingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotingResult) ProtoMessage() {}

func (x *VotingResult) ProtoReflect() protoreflect.Message {
	mi := &file_vote_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotingResult.ProtoReflect.Descriptor instead.
func (*VotingResult) Descriptor() ([]byte, []int) {
	return file_vote_contract_proto_rawDescGZIP(), []int{4}
}

func (x *VotingResult) GetVotingItemId() *Hash {
	if x != nil {
		return x.VotingItemId
	}
	return nil
}

func (x *VotingResult) GetResults() map[string]int64 {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *VotingResult) GetSnapshotNumber() int64 {
	if x != nil {
		return x.SnapshotNumber
	}
	return 0
}

func (x *VotingResult) GetVotersCount() int64 {
	if x != nil {
		return x.VotersCount
	}
	return 0
}

func (x *VotingResult) GetSnapshotStartTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.SnapshotStartTimestamp
	}
	return nil
}

func (x *VotingResult) GetSnapshotEndTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.SnapshotEndTimestamp
	}
	return nil
}

func (x *VotingResult) GetVotesAmount() int64 {
	if x != nil {
		return x.VotesAmount
	}
	return 0
}

type VotingRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The voting activity id.
	VotingItemId *Hash `protobuf:"bytes,1,opt,name=voting_item_id,json=votingItemId,proto3" json:"voting_item_id,omitempty"`
	// The address of voter.
	Voter *Address `protobuf:"bytes,2,opt,name=voter,proto3" json:"voter,omitempty"`
	// The snapshot number.
	SnapshotNumber int64 `protobuf:"varint,3,opt,name=snapshot_number,json=snapshotNumber,proto3" json:"snapshot_number,omitempty"`
	// The amount of vote.
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// The time of withdraw.
	WithdrawTimestamp *timestamp.Timestamp `protobuf:"bytes,5,opt,name=withdraw_timestamp,json=withdrawTimestamp,proto3" json:"withdraw_timestamp,omitempty"`
	// The time of vote.
	VoteTimestamp *timestamp.Timestamp `protobuf:"bytes,6,opt,name=vote_timestamp,json=voteTimestamp,proto3" json:"vote_timestamp,omitempty"`
	// Whether the vote had been withdrawn.
	IsWithdrawn bool `protobuf:"varint,7,opt,name=is_withdrawn,json=isWithdrawn,proto3" json:"is_withdrawn,omitempty"`
	// The option voted.
	Option string `protobuf:"bytes,8,opt,name=option,proto3" json:"option,omitempty"`
	// Whether vote others.
	IsChangeTarget bool `protobuf:"varint,9,opt,name=is_change_target,json=isChangeTarget,proto3" json:"is_change_target,omitempty"`
}

func (x *VotingRecord) Reset() {
	*x = VotingRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_contract_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotingRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotingRecord) ProtoMessage() {}

func (x *VotingRecord) ProtoReflect() protoreflect.Message {
	mi := &file_vote_contract_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotingRecord.ProtoReflect.Descriptor instead.
func (*VotingRecord) Descriptor() ([]byte, []int) {
	return file_vote_contract_proto_rawDescGZIP(), []int{5}
}

func (x *VotingRecord) GetVotingItemId() *Hash {
	if x != nil {
		return x.VotingItemId
	}
	return nil
}

func (x *VotingRecord) GetVoter() *Address {
	if x != nil {
		return x.Voter
	}
	return nil
}

func (x *VotingRecord) GetSnapshotNumber() int64 {
	if x != nil {
		return x.SnapshotNumber
	}
	return 0
}

func (x *VotingRecord) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *VotingRecord) GetWithdrawTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.WithdrawTimestamp
	}
	return nil
}

func (x *VotingRecord) GetVoteTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.VoteTimestamp
	}
	return nil
}

func (x *VotingRecord) GetIsWithdrawn() bool {
	if x != nil {
		return x.IsWithdrawn
	}
	return false
}

func (x *VotingRecord) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

func (x *VotingRecord) GetIsChangeTarget() bool {
	if x != nil {
		return x.IsChangeTarget
	}
	return false
}

type GetVotingRecordsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The vote ids.
	Ids []*Hash `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetVotingRecordsInput) Reset() {
	*x = GetVotingRecordsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_contract_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVotingRecordsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVotingRecordsInput) ProtoMessage() {}

func (x *GetVotingRecordsInput) ProtoReflect() protoreflect.Message {
	mi := &file_vote_contract_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVotingRecordsInput.ProtoReflect.Descriptor instead.
func (*GetVotingRecordsInput) Descriptor() ([]byte, []int) {
	return file_vote_contract_proto_rawDescGZIP(), []int{6}
}

func (x *GetVotingRecordsInput) GetIds() []*Hash {
	if x != nil {
		return x.Ids
	}
	return nil
}

type VotingRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The voting records.
	Records []*VotingRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *VotingRecords) Reset() {
	*x = VotingRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_contract_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotingRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotingRecords) ProtoMessage() {}

func (x *VotingRecords) ProtoReflect() protoreflect.Message {
	mi := &file_vote_contract_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotingRecords.ProtoReflect.Descriptor instead.
func (*VotingRecords) Descriptor() ([]byte, []int) {
	return file_vote_contract_proto_rawDescGZIP(), []int{7}
}

func (x *VotingRecords) GetRecords() []*VotingRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

var File_vote_contract_proto protoreflect.FileDescriptor

var file_vote_contract_proto_rawDesc = []byte{
	0x0a, 0x13, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x32, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0c, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x57, 0x0a, 0x13, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x56, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x76, 0x6f,
	0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x55,
	0x0a, 0x15, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x49,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x72, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x49, 0x64,
	0x73, 0x12, 0x2f, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x35, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x5f,
	0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x32, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0c, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd2,
	0x03, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x32, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0c, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74,
	0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x18,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x50, 0x0a, 0x16, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65,
	0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x9d, 0x03, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x0c, 0x76, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x49, 0x0a, 0x12, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x41, 0x0a, 0x0e, 0x76,
	0x6f, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x3f, 0x0a, 0x0d,
	0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2e, 0x0a,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vote_contract_proto_rawDescOnce sync.Once
	file_vote_contract_proto_rawDescData = file_vote_contract_proto_rawDesc
)

func file_vote_contract_proto_rawDescGZIP() []byte {
	file_vote_contract_proto_rawDescOnce.Do(func() {
		file_vote_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_vote_contract_proto_rawDescData)
	})
	return file_vote_contract_proto_rawDescData
}

var file_vote_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_vote_contract_proto_goTypes = []interface{}{
	(*GetVotingItemInput)(nil),    // 0: client.GetVotingItemInput
	(*VotedItems)(nil),            // 1: client.VotedItems
	(*VotedIds)(nil),              // 2: client.VotedIds
	(*GetVotingResultInput)(nil),  // 3: client.GetVotingResultInput
	(*VotingResult)(nil),          // 4: client.VotingResult
	(*VotingRecord)(nil),          // 5: client.VotingRecord
	(*GetVotingRecordsInput)(nil), // 6: client.GetVotingRecordsInput
	(*VotingRecords)(nil),         // 7: client.VotingRecords
	nil,                           // 8: client.VotedItems.VotedItemVoteIdsEntry
	nil,                           // 9: client.VotingResult.ResultsEntry
	(*Hash)(nil),                  // 10: client.Hash
	(*timestamp.Timestamp)(nil),   // 11: google.protobuf.Timestamp
	(*Address)(nil),               // 12: client.Address
}
var file_vote_contract_proto_depIdxs = []int32{
	10, // 0: client.GetVotingItemInput.voting_item_id:type_name -> client.Hash
	8,  // 1: client.VotedItems.voted_item_vote_ids:type_name -> client.VotedItems.VotedItemVoteIdsEntry
	10, // 2: client.VotedIds.active_votes:type_name -> client.Hash
	10, // 3: client.VotedIds.withdrawn_votes:type_name -> client.Hash
	10, // 4: client.GetVotingResultInput.voting_item_id:type_name -> client.Hash
	10, // 5: client.VotingResult.voting_item_id:type_name -> client.Hash
	9,  // 6: client.VotingResult.results:type_name -> client.VotingResult.ResultsEntry
	11, // 7: client.VotingResult.snapshot_start_timestamp:type_name -> google.protobuf.Timestamp
	11, // 8: client.VotingResult.snapshot_end_timestamp:type_name -> google.protobuf.Timestamp
	10, // 9: client.VotingRecord.voting_item_id:type_name -> client.Hash
	12, // 10: client.VotingRecord.voter:type_name -> client.Address
	11, // 11: client.VotingRecord.withdraw_timestamp:type_name -> google.protobuf.Timestamp
	11, // 12: client.VotingRecord.vote_timestamp:type_name -> google.protobuf.Timestamp
	10, // 13: client.GetVotingRecordsInput.ids:type_name -> client.Hash
	5,  // 14: client.VotingRecords.records:type_name -> client.VotingRecord
	2,  // 15: client.VotedItems.VotedItemVoteIdsEntry.value:type_name -> client.VotedIds
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_vote_contract_proto_init() }
func file_vote_contract_proto_init() {
	if File_vote_contract_proto != nil {
		return
	}
	file_client_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vote_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVotingItemInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_contract_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VotedItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_contract_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VotedIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_contract_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVotingResultInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_contract_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VotingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_contract_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VotingRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_contract_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVotingRecordsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_contract_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VotingRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vote_contract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vote_contract_proto_goTypes,
		DependencyIndexes: file_vote_contract_proto_depIdxs,
		MessageInfos:      file_vote_contract_proto_msgTypes,
	}.Build()
	File_vote_contract_proto = out.File
	file_vote_contract_proto_rawDesc = nil
	file_vote_contract_proto_goTypes = nil
	file_vote_contract_proto_depIdxs = nil
}
