// Code generated by protoc-gen-go. DO NOT EDIT.
// source: profit_contract.proto

package client

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//profit_contract
type CreatedSchemeIds struct {
	SchemeIds            []*Hash  `protobuf:"bytes,1,rep,name=scheme_ids,json=schemeIds,proto3" json:"scheme_ids" form:"scheme_ids"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatedSchemeIds) Reset()         { *m = CreatedSchemeIds{} }
func (m *CreatedSchemeIds) String() string { return proto.CompactTextString(m) }
func (*CreatedSchemeIds) ProtoMessage()    {}
func (*CreatedSchemeIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{0}
}

func (m *CreatedSchemeIds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatedSchemeIds.Unmarshal(m, b)
}
func (m *CreatedSchemeIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatedSchemeIds.Marshal(b, m, deterministic)
}
func (m *CreatedSchemeIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatedSchemeIds.Merge(m, src)
}
func (m *CreatedSchemeIds) XXX_Size() int {
	return xxx_messageInfo_CreatedSchemeIds.Size(m)
}
func (m *CreatedSchemeIds) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatedSchemeIds.DiscardUnknown(m)
}

var xxx_messageInfo_CreatedSchemeIds proto.InternalMessageInfo

func (m *CreatedSchemeIds) GetSchemeIds() []*Hash {
	if m != nil {
		return m.SchemeIds
	}
	return nil
}

type GetManagingSchemeIdsInput struct {
	Manager              *Address `protobuf:"bytes,1,opt,name=manager,proto3" json:"manager" form:"manager"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetManagingSchemeIdsInput) Reset()         { *m = GetManagingSchemeIdsInput{} }
func (m *GetManagingSchemeIdsInput) String() string { return proto.CompactTextString(m) }
func (*GetManagingSchemeIdsInput) ProtoMessage()    {}
func (*GetManagingSchemeIdsInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{1}
}

func (m *GetManagingSchemeIdsInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetManagingSchemeIdsInput.Unmarshal(m, b)
}
func (m *GetManagingSchemeIdsInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetManagingSchemeIdsInput.Marshal(b, m, deterministic)
}
func (m *GetManagingSchemeIdsInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetManagingSchemeIdsInput.Merge(m, src)
}
func (m *GetManagingSchemeIdsInput) XXX_Size() int {
	return xxx_messageInfo_GetManagingSchemeIdsInput.Size(m)
}
func (m *GetManagingSchemeIdsInput) XXX_DiscardUnknown() {
	xxx_messageInfo_GetManagingSchemeIdsInput.DiscardUnknown(m)
}

var xxx_messageInfo_GetManagingSchemeIdsInput proto.InternalMessageInfo

func (m *GetManagingSchemeIdsInput) GetManager() *Address {
	if m != nil {
		return m.Manager
	}
	return nil
}

type SchemeBeneficiaryShare struct {
	SchemeId             *Hash    `protobuf:"bytes,1,opt,name=scheme_id,json=schemeId,proto3" json:"scheme_id" form:"scheme_id"`
	Shares               int64    `protobuf:"zigzag64,2,opt,name=shares,proto3" json:"shares" form:"shares"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchemeBeneficiaryShare) Reset()         { *m = SchemeBeneficiaryShare{} }
func (m *SchemeBeneficiaryShare) String() string { return proto.CompactTextString(m) }
func (*SchemeBeneficiaryShare) ProtoMessage()    {}
func (*SchemeBeneficiaryShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{2}
}

func (m *SchemeBeneficiaryShare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchemeBeneficiaryShare.Unmarshal(m, b)
}
func (m *SchemeBeneficiaryShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchemeBeneficiaryShare.Marshal(b, m, deterministic)
}
func (m *SchemeBeneficiaryShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchemeBeneficiaryShare.Merge(m, src)
}
func (m *SchemeBeneficiaryShare) XXX_Size() int {
	return xxx_messageInfo_SchemeBeneficiaryShare.Size(m)
}
func (m *SchemeBeneficiaryShare) XXX_DiscardUnknown() {
	xxx_messageInfo_SchemeBeneficiaryShare.DiscardUnknown(m)
}

var xxx_messageInfo_SchemeBeneficiaryShare proto.InternalMessageInfo

func (m *SchemeBeneficiaryShare) GetSchemeId() *Hash {
	if m != nil {
		return m.SchemeId
	}
	return nil
}

func (m *SchemeBeneficiaryShare) GetShares() int64 {
	if m != nil {
		return m.Shares
	}
	return 0
}

type Scheme struct {
	VirtualAddress                        *Address                  `protobuf:"bytes,1,opt,name=virtual_address,json=virtualAddress,proto3" json:"virtual_address" form:"virtual_address"`
	TotalShares                           int64                     `protobuf:"zigzag64,2,opt,name=total_shares,json=totalShares,proto3" json:"total_shares" form:"total_shares"`
	UndistributedProfits                  map[string]int64          `protobuf:"bytes,3,rep,name=undistributed_profits,json=undistributedProfits,proto3" json:"undistributed_profits" form:"undistributed_profits" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"zigzag64,2,opt,name=value,proto3"`
	CurrentPeriod                         int64                     `protobuf:"zigzag64,4,opt,name=current_period,json=currentPeriod,proto3" json:"current_period" form:"current_period"`
	SubSchemes                            []*SchemeBeneficiaryShare `protobuf:"bytes,5,rep,name=sub_schemes,json=subSchemes,proto3" json:"sub_schemes" form:"sub_schemes"`
	ProfitReceivingDuePeriodCount         int64                     `protobuf:"zigzag64,7,opt,name=profit_receiving_due_period_count,json=profitReceivingDuePeriodCount,proto3" json:"profit_receiving_due_period_count" form:"profit_receiving_due_period_count"`
	IsReleaseAllBalanceEveryTimeByDefault bool                      `protobuf:"varint,8,opt,name=is_release_all_balance_every_time_by_default,json=isReleaseAllBalanceEveryTimeByDefault,proto3" json:"is_release_all_balance_every_time_by_default" form:"is_release_all_balance_every_time_by_default"`
	SchemeId                              *Hash                     `protobuf:"bytes,9,opt,name=scheme_id,json=schemeId,proto3" json:"scheme_id" form:"scheme_id"`
	DelayDistributePeriodCount            int32                     `protobuf:"zigzag32,10,opt,name=delay_distribute_period_count,json=delayDistributePeriodCount,proto3" json:"delay_distribute_period_count" form:"delay_distribute_period_count"`
	CachedDelayTotalShares                map[int64]int64           `protobuf:"bytes,11,rep,name=cached_delay_total_shares,json=cachedDelayTotalShares,proto3" json:"cached_delay_total_shares" form:"cached_delay_total_shares" protobuf_key:"zigzag64,1,opt,name=key,proto3" protobuf_val:"zigzag64,2,opt,name=value,proto3"`
	Manager                               *Address                  `protobuf:"bytes,12,opt,name=manager,proto3" json:"manager" form:"manager"`
	XXX_NoUnkeyedLiteral                  struct{}                  `json:"-"`
	XXX_unrecognized                      []byte                    `json:"-"`
	XXX_sizecache                         int32                     `json:"-"`
}

func (m *Scheme) Reset()         { *m = Scheme{} }
func (m *Scheme) String() string { return proto.CompactTextString(m) }
func (*Scheme) ProtoMessage()    {}
func (*Scheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{3}
}

func (m *Scheme) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scheme.Unmarshal(m, b)
}
func (m *Scheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scheme.Marshal(b, m, deterministic)
}
func (m *Scheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheme.Merge(m, src)
}
func (m *Scheme) XXX_Size() int {
	return xxx_messageInfo_Scheme.Size(m)
}
func (m *Scheme) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheme.DiscardUnknown(m)
}

var xxx_messageInfo_Scheme proto.InternalMessageInfo

func (m *Scheme) GetVirtualAddress() *Address {
	if m != nil {
		return m.VirtualAddress
	}
	return nil
}

func (m *Scheme) GetTotalShares() int64 {
	if m != nil {
		return m.TotalShares
	}
	return 0
}

func (m *Scheme) GetUndistributedProfits() map[string]int64 {
	if m != nil {
		return m.UndistributedProfits
	}
	return nil
}

func (m *Scheme) GetCurrentPeriod() int64 {
	if m != nil {
		return m.CurrentPeriod
	}
	return 0
}

func (m *Scheme) GetSubSchemes() []*SchemeBeneficiaryShare {
	if m != nil {
		return m.SubSchemes
	}
	return nil
}

func (m *Scheme) GetProfitReceivingDuePeriodCount() int64 {
	if m != nil {
		return m.ProfitReceivingDuePeriodCount
	}
	return 0
}

func (m *Scheme) GetIsReleaseAllBalanceEveryTimeByDefault() bool {
	if m != nil {
		return m.IsReleaseAllBalanceEveryTimeByDefault
	}
	return false
}

func (m *Scheme) GetSchemeId() *Hash {
	if m != nil {
		return m.SchemeId
	}
	return nil
}

func (m *Scheme) GetDelayDistributePeriodCount() int32 {
	if m != nil {
		return m.DelayDistributePeriodCount
	}
	return 0
}

func (m *Scheme) GetCachedDelayTotalShares() map[int64]int64 {
	if m != nil {
		return m.CachedDelayTotalShares
	}
	return nil
}

func (m *Scheme) GetManager() *Address {
	if m != nil {
		return m.Manager
	}
	return nil
}

type SchemePeriod struct {
	SchemeId             *Hash    `protobuf:"bytes,1,opt,name=scheme_id,json=schemeId,proto3" json:"scheme_id" form:"scheme_id"`
	Period               int64    `protobuf:"zigzag64,2,opt,name=period,proto3" json:"period" form:"period"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchemePeriod) Reset()         { *m = SchemePeriod{} }
func (m *SchemePeriod) String() string { return proto.CompactTextString(m) }
func (*SchemePeriod) ProtoMessage()    {}
func (*SchemePeriod) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{4}
}

func (m *SchemePeriod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchemePeriod.Unmarshal(m, b)
}
func (m *SchemePeriod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchemePeriod.Marshal(b, m, deterministic)
}
func (m *SchemePeriod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchemePeriod.Merge(m, src)
}
func (m *SchemePeriod) XXX_Size() int {
	return xxx_messageInfo_SchemePeriod.Size(m)
}
func (m *SchemePeriod) XXX_DiscardUnknown() {
	xxx_messageInfo_SchemePeriod.DiscardUnknown(m)
}

var xxx_messageInfo_SchemePeriod proto.InternalMessageInfo

func (m *SchemePeriod) GetSchemeId() *Hash {
	if m != nil {
		return m.SchemeId
	}
	return nil
}

func (m *SchemePeriod) GetPeriod() int64 {
	if m != nil {
		return m.Period
	}
	return 0
}

type DistributedProfitsInfo struct {
	TotalShares          int64            `protobuf:"zigzag64,1,opt,name=total_shares,json=totalShares,proto3" json:"total_shares" form:"total_shares"`
	ProfitsAmount        map[string]int64 `protobuf:"bytes,2,rep,name=profits_amount,json=profitsAmount,proto3" json:"profits_amount" form:"profits_amount" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"zigzag64,2,opt,name=value,proto3"`
	IsReleased           bool             `protobuf:"varint,3,opt,name=is_released,json=isReleased,proto3" json:"is_released" form:"is_released"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DistributedProfitsInfo) Reset()         { *m = DistributedProfitsInfo{} }
func (m *DistributedProfitsInfo) String() string { return proto.CompactTextString(m) }
func (*DistributedProfitsInfo) ProtoMessage()    {}
func (*DistributedProfitsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{5}
}

func (m *DistributedProfitsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributedProfitsInfo.Unmarshal(m, b)
}
func (m *DistributedProfitsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributedProfitsInfo.Marshal(b, m, deterministic)
}
func (m *DistributedProfitsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributedProfitsInfo.Merge(m, src)
}
func (m *DistributedProfitsInfo) XXX_Size() int {
	return xxx_messageInfo_DistributedProfitsInfo.Size(m)
}
func (m *DistributedProfitsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributedProfitsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DistributedProfitsInfo proto.InternalMessageInfo

func (m *DistributedProfitsInfo) GetTotalShares() int64 {
	if m != nil {
		return m.TotalShares
	}
	return 0
}

func (m *DistributedProfitsInfo) GetProfitsAmount() map[string]int64 {
	if m != nil {
		return m.ProfitsAmount
	}
	return nil
}

func (m *DistributedProfitsInfo) GetIsReleased() bool {
	if m != nil {
		return m.IsReleased
	}
	return false
}

type GetProfitDetailsInput struct {
	SchemeId             *Hash    `protobuf:"bytes,1,opt,name=scheme_id,json=schemeId,proto3" json:"scheme_id" form:"scheme_id"`
	Beneficiary          *Address `protobuf:"bytes,2,opt,name=beneficiary,proto3" json:"beneficiary" form:"beneficiary"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProfitDetailsInput) Reset()         { *m = GetProfitDetailsInput{} }
func (m *GetProfitDetailsInput) String() string { return proto.CompactTextString(m) }
func (*GetProfitDetailsInput) ProtoMessage()    {}
func (*GetProfitDetailsInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{6}
}

func (m *GetProfitDetailsInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProfitDetailsInput.Unmarshal(m, b)
}
func (m *GetProfitDetailsInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProfitDetailsInput.Marshal(b, m, deterministic)
}
func (m *GetProfitDetailsInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProfitDetailsInput.Merge(m, src)
}
func (m *GetProfitDetailsInput) XXX_Size() int {
	return xxx_messageInfo_GetProfitDetailsInput.Size(m)
}
func (m *GetProfitDetailsInput) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProfitDetailsInput.DiscardUnknown(m)
}

var xxx_messageInfo_GetProfitDetailsInput proto.InternalMessageInfo

func (m *GetProfitDetailsInput) GetSchemeId() *Hash {
	if m != nil {
		return m.SchemeId
	}
	return nil
}

func (m *GetProfitDetailsInput) GetBeneficiary() *Address {
	if m != nil {
		return m.Beneficiary
	}
	return nil
}

type ProfitDetails struct {
	Details              []*ProfitDetail `protobuf:"bytes,1,rep,name=details,proto3" json:"details" form:"details"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ProfitDetails) Reset()         { *m = ProfitDetails{} }
func (m *ProfitDetails) String() string { return proto.CompactTextString(m) }
func (*ProfitDetails) ProtoMessage()    {}
func (*ProfitDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{7}
}

func (m *ProfitDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfitDetails.Unmarshal(m, b)
}
func (m *ProfitDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfitDetails.Marshal(b, m, deterministic)
}
func (m *ProfitDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfitDetails.Merge(m, src)
}
func (m *ProfitDetails) XXX_Size() int {
	return xxx_messageInfo_ProfitDetails.Size(m)
}
func (m *ProfitDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfitDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ProfitDetails proto.InternalMessageInfo

func (m *ProfitDetails) GetDetails() []*ProfitDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

type ProfitDetail struct {
	StartPeriod          int64    `protobuf:"zigzag64,1,opt,name=start_period,json=startPeriod,proto3" json:"start_period" form:"start_period"`
	EndPeriod            int64    `protobuf:"zigzag64,2,opt,name=end_period,json=endPeriod,proto3" json:"end_period" form:"end_period"`
	Shares               int64    `protobuf:"zigzag64,3,opt,name=shares,proto3" json:"shares" form:"shares"`
	LastProfitPeriod     int64    `protobuf:"zigzag64,4,opt,name=last_profit_period,json=lastProfitPeriod,proto3" json:"last_profit_period" form:"last_profit_period"`
	IsWeightRemoved      bool     `protobuf:"varint,5,opt,name=is_weight_removed,json=isWeightRemoved,proto3" json:"is_weight_removed" form:"is_weight_removed"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfitDetail) Reset()         { *m = ProfitDetail{} }
func (m *ProfitDetail) String() string { return proto.CompactTextString(m) }
func (*ProfitDetail) ProtoMessage()    {}
func (*ProfitDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{8}
}

func (m *ProfitDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfitDetail.Unmarshal(m, b)
}
func (m *ProfitDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfitDetail.Marshal(b, m, deterministic)
}
func (m *ProfitDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfitDetail.Merge(m, src)
}
func (m *ProfitDetail) XXX_Size() int {
	return xxx_messageInfo_ProfitDetail.Size(m)
}
func (m *ProfitDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfitDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ProfitDetail proto.InternalMessageInfo

func (m *ProfitDetail) GetStartPeriod() int64 {
	if m != nil {
		return m.StartPeriod
	}
	return 0
}

func (m *ProfitDetail) GetEndPeriod() int64 {
	if m != nil {
		return m.EndPeriod
	}
	return 0
}

func (m *ProfitDetail) GetShares() int64 {
	if m != nil {
		return m.Shares
	}
	return 0
}

func (m *ProfitDetail) GetLastProfitPeriod() int64 {
	if m != nil {
		return m.LastProfitPeriod
	}
	return 0
}

func (m *ProfitDetail) GetIsWeightRemoved() bool {
	if m != nil {
		return m.IsWeightRemoved
	}
	return false
}

type ClaimProfitsInput struct {
	SchemeId             *Hash    `protobuf:"bytes,1,opt,name=scheme_id,json=schemeId,proto3" json:"scheme_id" form:"scheme_id"`
	Symbol               string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol" form:"symbol"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClaimProfitsInput) Reset()         { *m = ClaimProfitsInput{} }
func (m *ClaimProfitsInput) String() string { return proto.CompactTextString(m) }
func (*ClaimProfitsInput) ProtoMessage()    {}
func (*ClaimProfitsInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc8b2e678e8c7258, []int{9}
}

func (m *ClaimProfitsInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimProfitsInput.Unmarshal(m, b)
}
func (m *ClaimProfitsInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimProfitsInput.Marshal(b, m, deterministic)
}
func (m *ClaimProfitsInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimProfitsInput.Merge(m, src)
}
func (m *ClaimProfitsInput) XXX_Size() int {
	return xxx_messageInfo_ClaimProfitsInput.Size(m)
}
func (m *ClaimProfitsInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimProfitsInput.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimProfitsInput proto.InternalMessageInfo

func (m *ClaimProfitsInput) GetSchemeId() *Hash {
	if m != nil {
		return m.SchemeId
	}
	return nil
}

func (m *ClaimProfitsInput) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func init() {
	proto.RegisterType((*CreatedSchemeIds)(nil), "client.CreatedSchemeIds")
	proto.RegisterType((*GetManagingSchemeIdsInput)(nil), "client.GetManagingSchemeIdsInput")
	proto.RegisterType((*SchemeBeneficiaryShare)(nil), "client.SchemeBeneficiaryShare")
	proto.RegisterType((*Scheme)(nil), "client.Scheme")
	proto.RegisterMapType((map[int64]int64)(nil), "client.Scheme.CachedDelayTotalSharesEntry")
	proto.RegisterMapType((map[string]int64)(nil), "client.Scheme.UndistributedProfitsEntry")
	proto.RegisterType((*SchemePeriod)(nil), "client.SchemePeriod")
	proto.RegisterType((*DistributedProfitsInfo)(nil), "client.DistributedProfitsInfo")
	proto.RegisterMapType((map[string]int64)(nil), "client.DistributedProfitsInfo.ProfitsAmountEntry")
	proto.RegisterType((*GetProfitDetailsInput)(nil), "client.GetProfitDetailsInput")
	proto.RegisterType((*ProfitDetails)(nil), "client.ProfitDetails")
	proto.RegisterType((*ProfitDetail)(nil), "client.ProfitDetail")
	proto.RegisterType((*ClaimProfitsInput)(nil), "client.ClaimProfitsInput")
}

func init() { proto.RegisterFile("profit_contract.proto", fileDescriptor_bc8b2e678e8c7258) }

var fileDescriptor_bc8b2e678e8c7258 = []byte{
	// 806 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x5f, 0x6f, 0xdb, 0x36,
	0x10, 0x87, 0xe2, 0xc5, 0x89, 0xcf, 0xce, 0x3f, 0x22, 0x09, 0x14, 0x0f, 0xd9, 0x5c, 0x01, 0x05,
	0xdc, 0xae, 0x30, 0xd0, 0xee, 0xa5, 0xd8, 0x4b, 0x96, 0xc4, 0x5d, 0x9a, 0x87, 0x01, 0x9d, 0xda,
	0xfd, 0x01, 0x8a, 0x81, 0xa0, 0xc5, 0x4b, 0x4c, 0x8c, 0x92, 0x0c, 0x92, 0xf2, 0xa0, 0xaf, 0xb7,
	0x2f, 0xb3, 0xaf, 0xb0, 0xc7, 0x41, 0x24, 0x65, 0x4b, 0x4d, 0x9a, 0x2d, 0x4f, 0x16, 0xef, 0x7e,
	0xbc, 0xfb, 0xf1, 0xee, 0x77, 0x67, 0x38, 0x5a, 0xa8, 0xfc, 0x46, 0x18, 0x9a, 0xe4, 0x99, 0x51,
	0x2c, 0x31, 0x93, 0x85, 0xca, 0x4d, 0x4e, 0xba, 0x89, 0x14, 0x98, 0x99, 0xe1, 0xc0, 0xfd, 0x3a,
	0x6b, 0x74, 0x06, 0xfb, 0x97, 0x0a, 0x99, 0x41, 0xfe, 0x3e, 0x99, 0x63, 0x8a, 0xd7, 0x5c, 0x93,
	0x6f, 0x00, 0xb4, 0x3d, 0x50, 0xc1, 0x75, 0x18, 0x8c, 0x3a, 0xe3, 0xfe, 0xab, 0xc1, 0xc4, 0x5f,
	0x7b, 0xcb, 0xf4, 0x3c, 0xee, 0xe9, 0x1a, 0x1c, 0xfd, 0x00, 0x27, 0x57, 0x68, 0x7e, 0x64, 0x19,
	0xbb, 0x15, 0xd9, 0xed, 0x2a, 0xc8, 0x75, 0xb6, 0x28, 0x0c, 0x79, 0x06, 0x5b, 0x69, 0xe5, 0x41,
	0x15, 0x06, 0xa3, 0x60, 0xdc, 0x7f, 0xb5, 0x57, 0x87, 0x39, 0xe7, 0x5c, 0xa1, 0xd6, 0x71, 0xed,
	0x8f, 0x3e, 0xc2, 0xb1, 0xbb, 0x7c, 0x81, 0x19, 0xde, 0x88, 0x44, 0x30, 0x55, 0xbe, 0x9f, 0x33,
	0x85, 0xe4, 0x19, 0xf4, 0x56, 0x74, 0x7c, 0x98, 0x36, 0x9b, 0xed, 0x9a, 0x0d, 0x39, 0x86, 0xae,
	0xae, 0xee, 0xe8, 0x70, 0x63, 0x14, 0x8c, 0x49, 0xec, 0x4f, 0xd1, 0xdf, 0x5d, 0xe8, 0xba, 0xe8,
	0xe4, 0x35, 0xec, 0x2d, 0x85, 0x32, 0x05, 0x93, 0x94, 0x39, 0x0e, 0x9f, 0xa3, 0xb6, 0xeb, 0x71,
	0xfe, 0x4c, 0x9e, 0xc0, 0xc0, 0xe4, 0x86, 0x49, 0xda, 0x4a, 0xd1, 0xb7, 0x36, 0xcb, 0x54, 0x93,
	0xdf, 0xe1, 0xa8, 0xc8, 0xb8, 0xd0, 0x46, 0x89, 0x59, 0x61, 0x90, 0x53, 0xd7, 0x0a, 0x1d, 0x76,
	0x6c, 0x11, 0xc7, 0x75, 0x0a, 0xc7, 0x65, 0xf2, 0x73, 0x13, 0xfb, 0xce, 0x41, 0xdf, 0x64, 0x46,
	0x95, 0xf1, 0x61, 0x71, 0x8f, 0x8b, 0x3c, 0x85, 0xdd, 0xa4, 0x50, 0x0a, 0x33, 0x43, 0x17, 0xa8,
	0x44, 0xce, 0xc3, 0x2f, 0x2c, 0x87, 0x1d, 0x6f, 0x7d, 0x67, 0x8d, 0xe4, 0x0c, 0xfa, 0xba, 0x98,
	0x51, 0x57, 0x15, 0x1d, 0x6e, 0xda, 0xdc, 0x5f, 0xb5, 0x73, 0x7f, 0x5a, 0xe5, 0x18, 0x74, 0x31,
	0x73, 0x2e, 0x4d, 0xde, 0xc2, 0x13, 0xaf, 0x21, 0x85, 0x09, 0x8a, 0xa5, 0xc8, 0x6e, 0x29, 0x2f,
	0xd0, 0x27, 0xa5, 0x49, 0x5e, 0x64, 0x26, 0xdc, 0xb2, 0xa9, 0x4f, 0x1d, 0x30, 0xae, 0x71, 0xd3,
	0x02, 0x1d, 0x8b, 0xcb, 0x0a, 0x44, 0x3e, 0xc2, 0x0b, 0xa1, 0xa9, 0x42, 0x89, 0x4c, 0x23, 0x65,
	0x52, 0xd2, 0x19, 0x93, 0x2c, 0x4b, 0x90, 0xe2, 0x12, 0x55, 0x49, 0x8d, 0x48, 0x91, 0xce, 0x4a,
	0xca, 0xf1, 0x86, 0x15, 0xd2, 0x84, 0xdb, 0xa3, 0x60, 0xbc, 0x1d, 0x3f, 0x15, 0x3a, 0x76, 0x57,
	0xce, 0xa5, 0xbc, 0x70, 0x17, 0xde, 0x54, 0xf8, 0x0f, 0x22, 0xc5, 0x8b, 0x72, 0xea, 0xc0, 0x6d,
	0x61, 0xf4, 0x1e, 0x14, 0xc6, 0x39, 0x9c, 0x72, 0x94, 0xac, 0xa4, 0xeb, 0xaa, 0xb6, 0x5f, 0x03,
	0xa3, 0x60, 0x7c, 0x10, 0x0f, 0x2d, 0x68, 0xba, 0xc2, 0x34, 0x9f, 0x82, 0x70, 0x92, 0xb0, 0x64,
	0x8e, 0x9c, 0xba, 0x48, 0x2d, 0x2d, 0xf4, 0x6d, 0x8d, 0x9f, 0x7f, 0xd2, 0xdf, 0x4b, 0x8b, 0x9f,
	0x56, 0xf0, 0x0f, 0x6b, 0x95, 0xb8, 0x0e, 0x1f, 0x27, 0xf7, 0x3a, 0x9b, 0x23, 0x33, 0x78, 0x78,
	0x64, 0x86, 0x57, 0x70, 0xf2, 0x59, 0x05, 0x91, 0x7d, 0xe8, 0xfc, 0x81, 0xa5, 0xd5, 0x76, 0x2f,
	0xae, 0x3e, 0xc9, 0x21, 0x6c, 0x2e, 0x99, 0x2c, 0xd0, 0x0b, 0xd7, 0x1d, 0xbe, 0xdb, 0x78, 0x1d,
	0x0c, 0xaf, 0xe1, 0xcb, 0x07, 0xa8, 0x36, 0x43, 0x91, 0xff, 0x08, 0x15, 0xfd, 0x04, 0x03, 0xf7,
	0x78, 0xaf, 0xc5, 0xc7, 0x0d, 0xaf, 0x57, 0xb5, 0x1f, 0x5e, 0x77, 0x8a, 0xfe, 0x09, 0xe0, 0x78,
	0x7a, 0xe7, 0x95, 0xd7, 0xd9, 0x4d, 0x7e, 0x67, 0x24, 0x83, 0xbb, 0x23, 0xf9, 0x1b, 0xec, 0xfa,
	0x21, 0xa4, 0x2c, 0xb5, 0xad, 0xde, 0xb0, 0xbd, 0x7a, 0x59, 0xb3, 0xb8, 0x3f, 0xf4, 0xc4, 0x7f,
	0x9f, 0xdb, 0x3b, 0xae, 0x65, 0x3b, 0x8b, 0xa6, 0x8d, 0x7c, 0x0d, 0xfd, 0xb5, 0xb6, 0x79, 0xd8,
	0xb1, 0xd2, 0x85, 0x95, 0x74, 0xf9, 0xf0, 0x7b, 0x20, 0x77, 0xa3, 0x3c, 0xa6, 0x31, 0x51, 0x01,
	0x47, 0x57, 0x68, 0x5c, 0x90, 0x29, 0x1a, 0x26, 0xe4, 0x6a, 0xb1, 0xfe, 0xef, 0xb2, 0xbe, 0x84,
	0xfe, 0x6c, 0x3d, 0xec, 0x36, 0xc7, 0x3d, 0xa2, 0x6a, 0x62, 0xa2, 0x33, 0xd8, 0x69, 0xe5, 0x24,
	0x13, 0xd8, 0xe2, 0xee, 0xd3, 0xff, 0x1d, 0x1c, 0xd6, 0xf7, 0x9b, 0xb8, 0xb8, 0x06, 0x45, 0x7f,
	0x05, 0x30, 0x68, 0x7a, 0xaa, 0x46, 0x69, 0xc3, 0xd4, 0x6a, 0x6f, 0xf9, 0x46, 0x59, 0x9b, 0x57,
	0xca, 0x29, 0x00, 0x66, 0x9c, 0xb6, 0x24, 0xd0, 0xc3, 0x8c, 0x7b, 0xf7, 0x7a, 0xb5, 0x77, 0x9a,
	0xab, 0x9d, 0xbc, 0x00, 0x22, 0x99, 0x36, 0x7e, 0xd3, 0xb6, 0xf7, 0xe2, 0x7e, 0xe5, 0x71, 0x3c,
	0x7c, 0x94, 0xe7, 0x70, 0x20, 0x34, 0xfd, 0x13, 0xc5, 0xed, 0xbc, 0x5a, 0x6e, 0x69, 0xbe, 0x44,
	0x1e, 0x6e, 0xda, 0xce, 0xed, 0x09, 0xfd, 0xab, 0xb5, 0xc7, 0xce, 0x1c, 0xfd, 0x02, 0x07, 0x97,
	0x92, 0x89, 0x74, 0xa5, 0x8a, 0x47, 0x16, 0xbe, 0x62, 0x5c, 0xa6, 0xb3, 0x5c, 0xda, 0xc7, 0xf4,
	0x62, 0x7f, 0x9a, 0x75, 0xed, 0x3f, 0xef, 0xb7, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x73,
	0xf4, 0x5b, 0xa8, 0x07, 0x00, 0x00,
}
