// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: token_contract.proto

package client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// tokenContract
type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The symbol of the token.f
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The full name of the token.
	TokenName string `protobuf:"bytes,2,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	// The current supply of the token.
	Supply int64 `protobuf:"varint,3,opt,name=supply,proto3" json:"supply,omitempty"`
	// The total supply of the token.
	TotalSupply int64 `protobuf:"varint,4,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	// The precision of the token.
	Decimals int32 `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals,omitempty"`
	// The address that created the token.
	Issuer *Address `protobuf:"bytes,6,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// A flag indicating if this token is burnable.
	IsBurnable bool `protobuf:"varint,7,opt,name=is_burnable,json=isBurnable,proto3" json:"is_burnable,omitempty"`
	// The chain id of the token.
	IssueChainId int32 `protobuf:"varint,8,opt,name=issue_chain_id,json=issueChainId,proto3" json:"issue_chain_id,omitempty"`
	// The amount of issued tokens.
	Issued int64 `protobuf:"varint,9,opt,name=issued,proto3" json:"issued,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{0}
}

func (x *TokenInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TokenInfo) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *TokenInfo) GetSupply() int64 {
	if x != nil {
		return x.Supply
	}
	return 0
}

func (x *TokenInfo) GetTotalSupply() int64 {
	if x != nil {
		return x.TotalSupply
	}
	return 0
}

func (x *TokenInfo) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *TokenInfo) GetIssuer() *Address {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *TokenInfo) GetIsBurnable() bool {
	if x != nil {
		return x.IsBurnable
	}
	return false
}

func (x *TokenInfo) GetIssueChainId() int32 {
	if x != nil {
		return x.IssueChainId
	}
	return 0
}

func (x *TokenInfo) GetIssued() int64 {
	if x != nil {
		return x.Issued
	}
	return 0
}

type GetTokenInfoInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The symbol of token.
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *GetTokenInfoInput) Reset() {
	*x = GetTokenInfoInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenInfoInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenInfoInput) ProtoMessage() {}

func (x *GetTokenInfoInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenInfoInput.ProtoReflect.Descriptor instead.
func (*GetTokenInfoInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{1}
}

func (x *GetTokenInfoInput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type TokenInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of token information.
	Value []*TokenInfo `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *TokenInfoList) Reset() {
	*x = TokenInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfoList) ProtoMessage() {}

func (x *TokenInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfoList.ProtoReflect.Descriptor instead.
func (*TokenInfoList) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{2}
}

func (x *TokenInfoList) GetValue() []*TokenInfo {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetBalanceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The symbol of token.
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The target address of the query.
	Owner *Address `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *GetBalanceInput) Reset() {
	*x = GetBalanceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceInput) ProtoMessage() {}

func (x *GetBalanceInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceInput.ProtoReflect.Descriptor instead.
func (*GetBalanceInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{3}
}

func (x *GetBalanceInput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetBalanceInput) GetOwner() *Address {
	if x != nil {
		return x.Owner
	}
	return nil
}

type GetBalanceOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The symbol of token.
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The target address of the query.
	Owner *Address `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	// The balance of the owner.
	Balance int64 `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetBalanceOutput) Reset() {
	*x = GetBalanceOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceOutput) ProtoMessage() {}

func (x *GetBalanceOutput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceOutput.ProtoReflect.Descriptor instead.
func (*GetBalanceOutput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{4}
}

func (x *GetBalanceOutput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetBalanceOutput) GetOwner() *Address {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *GetBalanceOutput) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type GetAllowanceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The symbol of token.
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The address of the token owner.
	Owner *Address `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	// The address of the spender.
	Spender *Address `protobuf:"bytes,3,opt,name=spender,proto3" json:"spender,omitempty"`
}

func (x *GetAllowanceInput) Reset() {
	*x = GetAllowanceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllowanceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllowanceInput) ProtoMessage() {}

func (x *GetAllowanceInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllowanceInput.ProtoReflect.Descriptor instead.
func (*GetAllowanceInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllowanceInput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetAllowanceInput) GetOwner() *Address {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *GetAllowanceInput) GetSpender() *Address {
	if x != nil {
		return x.Spender
	}
	return nil
}

type GetAllowanceOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The symbol of token.
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The address of the token owner.
	Owner *Address `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	// The address of the spender.
	Spender *Address `protobuf:"bytes,3,opt,name=spender,proto3" json:"spender,omitempty"`
	// The amount of allowance.
	Allowance int64 `protobuf:"varint,4,opt,name=allowance,proto3" json:"allowance,omitempty"`
}

func (x *GetAllowanceOutput) Reset() {
	*x = GetAllowanceOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllowanceOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllowanceOutput) ProtoMessage() {}

func (x *GetAllowanceOutput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllowanceOutput.ProtoReflect.Descriptor instead.
func (*GetAllowanceOutput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllowanceOutput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetAllowanceOutput) GetOwner() *Address {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *GetAllowanceOutput) GetSpender() *Address {
	if x != nil {
		return x.Spender
	}
	return nil
}

func (x *GetAllowanceOutput) GetAllowance() int64 {
	if x != nil {
		return x.Allowance
	}
	return 0
}

type IsInWhiteListInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The symbol of token.
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The address to check.
	Address *Address `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IsInWhiteListInput) Reset() {
	*x = IsInWhiteListInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsInWhiteListInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsInWhiteListInput) ProtoMessage() {}

func (x *IsInWhiteListInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsInWhiteListInput.ProtoReflect.Descriptor instead.
func (*IsInWhiteListInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{7}
}

func (x *IsInWhiteListInput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *IsInWhiteListInput) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

type GetLockedAmountInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of the lock.
	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The token symbol.
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The id of the lock.
	LockId *Hash `protobuf:"bytes,3,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
}

func (x *GetLockedAmountInput) Reset() {
	*x = GetLockedAmountInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLockedAmountInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockedAmountInput) ProtoMessage() {}

func (x *GetLockedAmountInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockedAmountInput.ProtoReflect.Descriptor instead.
func (*GetLockedAmountInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{8}
}

func (x *GetLockedAmountInput) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetLockedAmountInput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetLockedAmountInput) GetLockId() *Hash {
	if x != nil {
		return x.LockId
	}
	return nil
}

type GetLockedAmountOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of the lock.
	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The token symbol.
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The id of the lock.
	LockId *Hash `protobuf:"bytes,3,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
	// The locked amount.
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetLockedAmountOutput) Reset() {
	*x = GetLockedAmountOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLockedAmountOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockedAmountOutput) ProtoMessage() {}

func (x *GetLockedAmountOutput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockedAmountOutput.ProtoReflect.Descriptor instead.
func (*GetLockedAmountOutput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{9}
}

func (x *GetLockedAmountOutput) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetLockedAmountOutput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetLockedAmountOutput) GetLockId() *Hash {
	if x != nil {
		return x.LockId
	}
	return nil
}

func (x *GetLockedAmountOutput) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetVirtualAddressForLockingInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of the lock.
	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The id of the lock.
	LockId *Hash `protobuf:"bytes,2,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
}

func (x *GetVirtualAddressForLockingInput) Reset() {
	*x = GetVirtualAddressForLockingInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualAddressForLockingInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualAddressForLockingInput) ProtoMessage() {}

func (x *GetVirtualAddressForLockingInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualAddressForLockingInput.ProtoReflect.Descriptor instead.
func (*GetVirtualAddressForLockingInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{10}
}

func (x *GetVirtualAddressForLockingInput) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetVirtualAddressForLockingInput) GetLockId() *Hash {
	if x != nil {
		return x.LockId
	}
	return nil
}

type GetCrossChainTransferTokenContractAddressInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The chain id.
	ChainId int32 `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
}

func (x *GetCrossChainTransferTokenContractAddressInput) Reset() {
	*x = GetCrossChainTransferTokenContractAddressInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCrossChainTransferTokenContractAddressInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCrossChainTransferTokenContractAddressInput) ProtoMessage() {}

func (x *GetCrossChainTransferTokenContractAddressInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCrossChainTransferTokenContractAddressInput.ProtoReflect.Descriptor instead.
func (*GetCrossChainTransferTokenContractAddressInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{11}
}

func (x *GetCrossChainTransferTokenContractAddressInput) GetChainId() int32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

type TransferFromInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source address of the token.
	From *Address `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// The destination address of the token.
	To *Address `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// The symbol of the token to transfer.
	Symbol string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The amount to transfer.
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// The memo.
	Memo string `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *TransferFromInput) Reset() {
	*x = TransferFromInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferFromInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferFromInput) ProtoMessage() {}

func (x *TransferFromInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferFromInput.ProtoReflect.Descriptor instead.
func (*TransferFromInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{12}
}

func (x *TransferFromInput) GetFrom() *Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferFromInput) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferFromInput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TransferFromInput) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferFromInput) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type TransferInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The receiver of the token.
	To *Address `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// The token symbol to transfer.
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The amount to to transfer.
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// The memo.
	Memo string `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *TransferInput) Reset() {
	*x = TransferInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInput) ProtoMessage() {}

func (x *TransferInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInput.ProtoReflect.Descriptor instead.
func (*TransferInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{13}
}

func (x *TransferInput) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferInput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TransferInput) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferInput) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type Transferred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source address of the transferred token.
	From *Address `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// The destination address of the transferred token.
	To *Address `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// The symbol of the transferred token.
	Symbol string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The amount of the transferred token.
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// The memo.
	Memo string `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *Transferred) Reset() {
	*x = Transferred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transferred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transferred) ProtoMessage() {}

func (x *Transferred) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transferred.ProtoReflect.Descriptor instead.
func (*Transferred) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{14}
}

func (x *Transferred) GetFrom() *Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Transferred) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Transferred) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Transferred) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transferred) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type CrossChainTransferInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The receiver of transfer.
	To *Address `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// The symbol of token.
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The amount of token to transfer.
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// The memo.
	Memo string `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	// The destination chain id.
	ToChainId int32 `protobuf:"varint,5,opt,name=to_chain_id,json=toChainId,proto3" json:"to_chain_id,omitempty"`
	// The chain id of the token.
	IssueChainId int32 `protobuf:"varint,6,opt,name=issue_chain_id,json=issueChainId,proto3" json:"issue_chain_id,omitempty"`
}

func (x *CrossChainTransferInput) Reset() {
	*x = CrossChainTransferInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossChainTransferInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossChainTransferInput) ProtoMessage() {}

func (x *CrossChainTransferInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossChainTransferInput.ProtoReflect.Descriptor instead.
func (*CrossChainTransferInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{15}
}

func (x *CrossChainTransferInput) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *CrossChainTransferInput) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CrossChainTransferInput) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CrossChainTransferInput) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *CrossChainTransferInput) GetToChainId() int32 {
	if x != nil {
		return x.ToChainId
	}
	return 0
}

func (x *CrossChainTransferInput) GetIssueChainId() int32 {
	if x != nil {
		return x.IssueChainId
	}
	return 0
}

type CrossChainTransferred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source address of the transferred token.
	From *Address `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// The destination address of the transferred token.
	To *Address `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// The symbol of the transferred token.
	Symbol string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The amount of the transferred token.
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// The memo.
	Memo string `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	// The destination chain id.
	ToChainId int32 `protobuf:"varint,6,opt,name=to_chain_id,json=toChainId,proto3" json:"to_chain_id,omitempty"`
	// The chain id of the token.
	IssueChainId int32 `protobuf:"varint,7,opt,name=issue_chain_id,json=issueChainId,proto3" json:"issue_chain_id,omitempty"`
}

func (x *CrossChainTransferred) Reset() {
	*x = CrossChainTransferred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossChainTransferred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossChainTransferred) ProtoMessage() {}

func (x *CrossChainTransferred) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossChainTransferred.ProtoReflect.Descriptor instead.
func (*CrossChainTransferred) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{16}
}

func (x *CrossChainTransferred) GetFrom() *Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *CrossChainTransferred) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *CrossChainTransferred) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CrossChainTransferred) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CrossChainTransferred) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *CrossChainTransferred) GetToChainId() int32 {
	if x != nil {
		return x.ToChainId
	}
	return 0
}

func (x *CrossChainTransferred) GetIssueChainId() int32 {
	if x != nil {
		return x.IssueChainId
	}
	return 0
}

type CrossChainReceiveTokenInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source chain id.
	FromChainId int32 `protobuf:"varint,1,opt,name=from_chain_id,json=fromChainId,proto3" json:"from_chain_id,omitempty"`
	// The height of the transfer transaction.
	ParentChainHeight int64 `protobuf:"varint,2,opt,name=parent_chain_height,json=parentChainHeight,proto3" json:"parent_chain_height,omitempty"`
	// The raw bytes of the transfer transaction.
	TransferTransactionBytes []byte `protobuf:"bytes,3,opt,name=transfer_transaction_bytes,json=transferTransactionBytes,proto3" json:"transfer_transaction_bytes,omitempty"`
	// The merkle path created from the transfer transaction.
	MerklePath *MerklePath `protobuf:"bytes,4,opt,name=merkle_path,json=merklePath,proto3" json:"merkle_path,omitempty"`
}

func (x *CrossChainReceiveTokenInput) Reset() {
	*x = CrossChainReceiveTokenInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossChainReceiveTokenInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossChainReceiveTokenInput) ProtoMessage() {}

func (x *CrossChainReceiveTokenInput) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossChainReceiveTokenInput.ProtoReflect.Descriptor instead.
func (*CrossChainReceiveTokenInput) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{17}
}

func (x *CrossChainReceiveTokenInput) GetFromChainId() int32 {
	if x != nil {
		return x.FromChainId
	}
	return 0
}

func (x *CrossChainReceiveTokenInput) GetParentChainHeight() int64 {
	if x != nil {
		return x.ParentChainHeight
	}
	return 0
}

func (x *CrossChainReceiveTokenInput) GetTransferTransactionBytes() []byte {
	if x != nil {
		return x.TransferTransactionBytes
	}
	return nil
}

func (x *CrossChainReceiveTokenInput) GetMerklePath() *MerklePath {
	if x != nil {
		return x.MerklePath
	}
	return nil
}

type CrossChainReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source address of the transferred token.
	From *Address `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// The destination address of the transferred token.
	To *Address `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// The symbol of the received token.
	Symbol string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// The amount of the received token.
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// The memo.
	Memo string `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	// The destination chain id.
	FromChainId int32 `protobuf:"varint,6,opt,name=from_chain_id,json=fromChainId,proto3" json:"from_chain_id,omitempty"`
	// The chain id of the token.
	IssueChainId int32 `protobuf:"varint,7,opt,name=issue_chain_id,json=issueChainId,proto3" json:"issue_chain_id,omitempty"`
	// The parent chain height of the transfer transaction.
	ParentChainHeight int64 `protobuf:"varint,8,opt,name=parent_chain_height,json=parentChainHeight,proto3" json:"parent_chain_height,omitempty"`
	// The id of transfer transaction.
	TransferTransactionId *Hash `protobuf:"bytes,9,opt,name=transfer_transaction_id,json=transferTransactionId,proto3" json:"transfer_transaction_id,omitempty"`
}

func (x *CrossChainReceived) Reset() {
	*x = CrossChainReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_contract_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossChainReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossChainReceived) ProtoMessage() {}

func (x *CrossChainReceived) ProtoReflect() protoreflect.Message {
	mi := &file_token_contract_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossChainReceived.ProtoReflect.Descriptor instead.
func (*CrossChainReceived) Descriptor() ([]byte, []int) {
	return file_token_contract_proto_rawDescGZIP(), []int{18}
}

func (x *CrossChainReceived) GetFrom() *Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *CrossChainReceived) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *CrossChainReceived) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CrossChainReceived) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CrossChainReceived) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *CrossChainReceived) GetFromChainId() int32 {
	if x != nil {
		return x.FromChainId
	}
	return 0
}

func (x *CrossChainReceived) GetIssueChainId() int32 {
	if x != nil {
		return x.IssueChainId
	}
	return 0
}

func (x *CrossChainReceived) GetParentChainHeight() int64 {
	if x != nil {
		return x.ParentChainHeight
	}
	return 0
}

func (x *CrossChainReceived) GetTransferTransactionId() *Hash {
	if x != nil {
		return x.TransferTransactionId
	}
	return nil
}

var File_token_contract_proto protoreflect.FileDescriptor

var file_token_contract_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x0d,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x02, 0x0a, 0x09,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x42, 0x75, 0x72, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x22,
	0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x38, 0x0a, 0x0d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x6b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x7d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x12, 0x49, 0x73, 0x49, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x80, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22,
	0x99, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x07,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x06, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x46, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x9d, 0x01,
	0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22, 0x74, 0x0a,
	0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1f,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x05, 0x88, 0x8f, 0xf5, 0x01, 0x01, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x26, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x05, 0x88, 0x8f,
	0xf5, 0x01, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0x8f, 0xf5, 0x01, 0x01, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x3a, 0x04, 0xa0, 0xbb, 0x18, 0x01, 0x22, 0xc4, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x5f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22,
	0xed, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1f,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x3a, 0x04, 0xa0, 0xbb, 0x18, 0x01, 0x22,
	0xe4, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x33, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xe4, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x23, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x66, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x44, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x3a, 0x04, 0xa0, 0xbb, 0x18, 0x01, 0x42, 0x04, 0x5a,
	0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_token_contract_proto_rawDescOnce sync.Once
	file_token_contract_proto_rawDescData = file_token_contract_proto_rawDesc
)

func file_token_contract_proto_rawDescGZIP() []byte {
	file_token_contract_proto_rawDescOnce.Do(func() {
		file_token_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_token_contract_proto_rawDescData)
	})
	return file_token_contract_proto_rawDescData
}

var file_token_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_token_contract_proto_goTypes = []interface{}{
	(*TokenInfo)(nil),                                      // 0: client.TokenInfo
	(*GetTokenInfoInput)(nil),                              // 1: client.GetTokenInfoInput
	(*TokenInfoList)(nil),                                  // 2: client.TokenInfoList
	(*GetBalanceInput)(nil),                                // 3: client.GetBalanceInput
	(*GetBalanceOutput)(nil),                               // 4: client.GetBalanceOutput
	(*GetAllowanceInput)(nil),                              // 5: client.GetAllowanceInput
	(*GetAllowanceOutput)(nil),                             // 6: client.GetAllowanceOutput
	(*IsInWhiteListInput)(nil),                             // 7: client.IsInWhiteListInput
	(*GetLockedAmountInput)(nil),                           // 8: client.GetLockedAmountInput
	(*GetLockedAmountOutput)(nil),                          // 9: client.GetLockedAmountOutput
	(*GetVirtualAddressForLockingInput)(nil),               // 10: client.GetVirtualAddressForLockingInput
	(*GetCrossChainTransferTokenContractAddressInput)(nil), // 11: client.GetCrossChainTransferTokenContractAddressInput
	(*TransferFromInput)(nil),                              // 12: client.TransferFromInput
	(*TransferInput)(nil),                                  // 13: client.TransferInput
	(*Transferred)(nil),                                    // 14: client.Transferred
	(*CrossChainTransferInput)(nil),                        // 15: client.CrossChainTransferInput
	(*CrossChainTransferred)(nil),                          // 16: client.CrossChainTransferred
	(*CrossChainReceiveTokenInput)(nil),                    // 17: client.CrossChainReceiveTokenInput
	(*CrossChainReceived)(nil),                             // 18: client.CrossChainReceived
	(*Address)(nil),                                        // 19: client.Address
	(*Hash)(nil),                                           // 20: client.Hash
	(*MerklePath)(nil),                                     // 21: client.MerklePath
}
var file_token_contract_proto_depIdxs = []int32{
	19, // 0: client.TokenInfo.issuer:type_name -> client.Address
	0,  // 1: client.TokenInfoList.value:type_name -> client.TokenInfo
	19, // 2: client.GetBalanceInput.owner:type_name -> client.Address
	19, // 3: client.GetBalanceOutput.owner:type_name -> client.Address
	19, // 4: client.GetAllowanceInput.owner:type_name -> client.Address
	19, // 5: client.GetAllowanceInput.spender:type_name -> client.Address
	19, // 6: client.GetAllowanceOutput.owner:type_name -> client.Address
	19, // 7: client.GetAllowanceOutput.spender:type_name -> client.Address
	19, // 8: client.IsInWhiteListInput.address:type_name -> client.Address
	19, // 9: client.GetLockedAmountInput.address:type_name -> client.Address
	20, // 10: client.GetLockedAmountInput.lock_id:type_name -> client.Hash
	19, // 11: client.GetLockedAmountOutput.address:type_name -> client.Address
	20, // 12: client.GetLockedAmountOutput.lock_id:type_name -> client.Hash
	19, // 13: client.GetVirtualAddressForLockingInput.address:type_name -> client.Address
	20, // 14: client.GetVirtualAddressForLockingInput.lock_id:type_name -> client.Hash
	19, // 15: client.TransferFromInput.from:type_name -> client.Address
	19, // 16: client.TransferFromInput.to:type_name -> client.Address
	19, // 17: client.TransferInput.to:type_name -> client.Address
	19, // 18: client.Transferred.from:type_name -> client.Address
	19, // 19: client.Transferred.to:type_name -> client.Address
	19, // 20: client.CrossChainTransferInput.to:type_name -> client.Address
	19, // 21: client.CrossChainTransferred.from:type_name -> client.Address
	19, // 22: client.CrossChainTransferred.to:type_name -> client.Address
	21, // 23: client.CrossChainReceiveTokenInput.merkle_path:type_name -> client.MerklePath
	19, // 24: client.CrossChainReceived.from:type_name -> client.Address
	19, // 25: client.CrossChainReceived.to:type_name -> client.Address
	20, // 26: client.CrossChainReceived.transfer_transaction_id:type_name -> client.Hash
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_token_contract_proto_init() }
func file_token_contract_proto_init() {
	if File_token_contract_proto != nil {
		return
	}
	file_options_proto_init()
	file_client_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_token_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenInfoInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllowanceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllowanceOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsInWhiteListInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLockedAmountInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLockedAmountOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualAddressForLockingInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCrossChainTransferTokenContractAddressInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferFromInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transferred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossChainTransferInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossChainTransferred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossChainReceiveTokenInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_contract_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossChainReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_token_contract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_token_contract_proto_goTypes,
		DependencyIndexes: file_token_contract_proto_depIdxs,
		MessageInfos:      file_token_contract_proto_msgTypes,
	}.Build()
	File_token_contract_proto = out.File
	file_token_contract_proto_rawDesc = nil
	file_token_contract_proto_goTypes = nil
	file_token_contract_proto_depIdxs = nil
}
